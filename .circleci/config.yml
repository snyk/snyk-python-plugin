version: 2.1

orbs:
  node: circleci/node@5.1.0
  prodsec: snyk/prodsec-orb@1.0

defaults: &defaults
  resource_class: medium
  docker:
    - image: cimg/node:19.6.1

jobs:
  lint:
    <<: *defaults
    steps:
      - checkout
      - node/install-packages:
          with-cache: false
          override-ci-command: npm install
      - run:
          command: npm run lint

  test:
    <<: *defaults
    parameters:
      node_version:
        type: string
      python_version:
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - when:
          condition: 
            equal: [ "3.12", <<parameters.python_version>>]
          steps:
          - run:
              name: Run tests
              command: |
                BUILDKIT_PROGRESS=plain \
                DOCKER_BUILDKIT=1 \
                docker build \
                    --build-arg NODE_VERSION=<< parameters.node_version >> \
                    --build-arg PYTHON_VERSION=<< parameters.python_version >> \
                    --build-arg PY_TEST_CMD=test:pysrc3_12 \
                    -t snyk-python-plugin:integration-tests-<< parameters.python_version >> \
                    -f test/Dockerfile .
                docker run --rm snyk-python-plugin:integration-tests-<< parameters.python_version >>
      - when:
          condition: 
            or:
              - equal: [ "3.8", <<parameters.python_version>>]
              - equal: [ "3.9", <<parameters.python_version>>]
              - equal: [ "3.10", <<parameters.python_version>>]
              - equal: [ "3.11", <<parameters.python_version>>]
          steps:
          - run:
              name: Run tests
              command: |
                BUILDKIT_PROGRESS=plain \
                DOCKER_BUILDKIT=1 \
                docker build \
                    --build-arg NODE_VERSION=<< parameters.node_version >> \
                    --build-arg PYTHON_VERSION=<< parameters.python_version >> \
                    --build-arg PY_TEST_CMD=test:pysrc3 \
                    -t snyk-python-plugin:integration-tests-<< parameters.python_version >> \
                    -f test/Dockerfile .
                docker run --rm snyk-python-plugin:integration-tests-<< parameters.python_version >>


  build:
    <<: *defaults
    steps:
      - checkout
      - node/install-packages:
          with-cache: false
          override-ci-command: npm install
      - run:
          command: npm run build

  release:
    <<: *defaults
    docker:
      - image: node:18
    steps:
      - checkout
      - node/install-packages:
          with-cache: false
          override-ci-command: npm install
      - run:
          command: npm run build
      - run:
          name: Release
          command: npx semantic-release@21

workflows:
  version: 2
  test_and_release:
    jobs:
      - prodsec/secrets-scan:
          name: Scan repository for secrets
          context:
            - snyk-bot-slack
          channel: os-team-managed-alerts

      - lint:
          name: Lint
          filters:
            branches:
              ignore:
                - main

      - build:
          name: Build
          filters:
            branches:
              ignore:
                - main

      - test:
          name: Node << matrix.node_version >>, Python << matrix.python_version >>
          requires:
            - Lint
            - Build
          matrix:
            parameters:
              node_version: [
                '14',
                '16',
                '18',
              ]
              python_version: [
                '3.8',
                '3.9',
                '3.10',
                '3.11',
                '3.12',
              ]
          filters:
            branches:
              ignore:
                - main

      - release:
          name: Release
          context: nodejs-lib-release
          requires:
            - Scan repository for secrets
          filters:
            branches:
              only:
                - main

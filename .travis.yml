dist: bionic
sudo: false
notifications:
  email: false
language: node_js
node_js:
  - "12"
  - "10"
  - "8"
  - "6"
env:
  - PIP_VER=9.0.3   PYTHON_VER=2.7
  - PIP_VER=9.0.3   PYTHON_VER=3.6
  - PIP_VER=10.0.0  PYTHON_VER=2.7
  - PIP_VER=10.0.0  PYTHON_VER=3.6
  - PIP_VER=18.1.0  PYTHON_VER=2.7
  - PIP_VER=18.1.0  PYTHON_VER=3.6
cache:
  directories:
    - node_modules
before_script:
  # Find the latest specific release of the desired Python version, e.g. 3.6.6.
  - export PYTHON_VER_FULL=`pyenv install --list | grep -v 'Available versions' | awk '{$1=$1};1' | grep "^$PYTHON_VER\.[0-9]\+$" | tail -1`
  - echo $PYTHON_VER_FULL
  # Install the specific release of Python if it isn't already installed
  - pyenv install -s $PYTHON_VER_FULL
  - pyenv shell $PYTHON_VER_FULL
  - python --version
  - export PATH=$HOME/.local/bin:$PATH
  - pip install --user pip==$PIP_VER
  # Call `pyenv rehash` to avoid issues after installing a new version of pip.
  # see: https://github.com/pyenv/pyenv/issues/1141#issuecomment-383092896
  - pyenv rehash
  - pip --version
  - pip install --user -r dev-requirements.txt --disable-pip-version-check
  - npm run lint
jobs:
  include:
    - stage: npm release
      node_js: "8" # This *has* to be the "build leader"
      script: skip
      before_script: # Don't need virtualenv for release, so skip it
      after_success:
        - npx semantic-release
branches:
  only:
    - master
